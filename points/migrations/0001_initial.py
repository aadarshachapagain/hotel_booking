# Generated by Django 2.1.5 on 2019-10-02 10:54

import datetime
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('booking', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('transaction_amount', models.IntegerField(blank=True, null=True)),
                ('net_total', models.IntegerField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.ModuleBooking')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.BookingTable')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Customer')),
            ],
            options={
                'verbose_name_plural': 'Credit Points',
            },
        ),
        migrations.CreateModel(
            name='Membership_plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, null=True)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('renewal_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('reward_point', models.IntegerField(default=0, null=True)),
                ('virtual_point', models.IntegerField(default=0, null=True)),
                ('virtual_point_for_old', models.IntegerField(default=0, null=True)),
                ('credit_point_for_old', models.IntegerField(default=0, null=True)),
                ('upgrade_reward_point', models.IntegerField(default=0, null=True)),
                ('position', models.IntegerField(null=True)),
                ('renewal_cond', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(12)])),
                ('expiry_cond', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(12)])),
                ('maturity_time', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(12)])),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PointSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frompoint', models.CharField(max_length=200)),
                ('topoint', models.CharField(max_length=200)),
                ('conversion_ratio', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=10)),
                ('maturity_time', models.IntegerField(default=12)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'Point Setting',
            },
        ),
        migrations.CreateModel(
            name='RewardPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('transaction_amount', models.IntegerField(blank=True, null=True)),
                ('net_total', models.IntegerField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.ModuleBooking')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.BookingTable')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Customer')),
            ],
            options={
                'verbose_name_plural': 'Reward Points',
            },
        ),
        migrations.CreateModel(
            name='VirtualPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('transaction_amount', models.IntegerField(blank=True, null=True)),
                ('net_total', models.IntegerField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.ModuleBooking')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.BookingTable')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Customer')),
            ],
            options={
                'verbose_name_plural': 'Virtual Points',
            },
        ),
    ]
