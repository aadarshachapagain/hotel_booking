# Generated by Django 2.1.5 on 2019-10-02 10:54

import booking.customer.models
import booking.guestdetail.models
import booking.guestdocdetail.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0002_passwordreset'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(max_length=250, null=True)),
                ('payment_type', models.CharField(max_length=250, null=True)),
                ('payment_status', models.CharField(max_length=250, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('total_discount', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('total_tax', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('booked_date', models.DateField(blank=True, max_length=60, null=True)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
            options={
                'verbose_name_plural': 'Booking Table',
            },
        ),
        migrations.CreateModel(
            name='BusinessCashBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('cash_bonus_amount', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('net_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'Business Cash Bonus',
            },
        ),
        migrations.CreateModel(
            name='BusinessPartners',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('setupcost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('renewalcost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('acctransferable', models.BooleanField(blank=True, null=True)),
                ('refundable', models.BooleanField(blank=True, default=False, null=True)),
                ('flightincludedCb', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('flightexcludedCb', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('flightincludedVb', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('package_worth', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('return_ticket_worth', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('countforreturnticket', models.IntegerField(blank=True, null=True)),
                ('credit_point_for_old', models.IntegerField(default=0, null=True)),
            ],
            options={
                'verbose_name_plural': 'BusinessPartners',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('name', models.CharField(max_length=60, null=True)),
                ('contact', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('address', models.CharField(blank=True, max_length=80, null=True)),
                ('gender', models.CharField(max_length=10, null=True)),
                ('dob', models.DateField(blank=True, null=True, validators=[booking.customer.models.no_future])),
                ('image', models.ImageField(blank=True, default='default.png', upload_to='')),
                ('reward', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('uniqtoken', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='GuestDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('contact', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('address', models.CharField(blank=True, max_length=80, null=True)),
                ('gender', models.CharField(max_length=10, null=True)),
                ('dob', models.DateField(blank=True, null=True, validators=[booking.guestdetail.models.no_future])),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
            options={
                'verbose_name_plural': 'Guest Detail',
            },
        ),
        migrations.CreateModel(
            name='GuestDocDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=60, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('document_number', models.CharField(max_length=60, null=True)),
                ('doc_file', models.FileField(upload_to='documents/')),
                ('visa_required', models.CharField(max_length=60, null=True)),
                ('visa_expiry', models.DateField(blank=True, null=True, validators=[booking.guestdocdetail.models.no_past])),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
            options={
                'verbose_name_plural': 'Guest Document Detail',
            },
        ),
        migrations.CreateModel(
            name='HotelBookingLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('checkin_date', models.DateField(blank=True, max_length=60, null=True)),
                ('checkout_date', models.DateField(blank=True, max_length=60, null=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, max_length=60)),
            ],
            options={
                'verbose_name_plural': 'Hotel Booking Log',
            },
        ),
        migrations.CreateModel(
            name='ModuleBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=250, null=True)),
                ('quantity', models.IntegerField(blank=True)),
                ('start_date', models.DateField(blank=True, max_length=60, null=True)),
                ('end_date', models.DateField(blank=True, max_length=60, null=True)),
                ('sub_total', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('tax', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('company_id', models.IntegerField(blank=True, null=True)),
                ('inventory_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Module Booking',
            },
        ),
        migrations.CreateModel(
            name='PointsLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('points', models.IntegerField(blank=True, default=0, null=True)),
                ('available', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'PointsLog',
            },
        ),
        migrations.CreateModel(
            name='PointsOnSale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_type', models.CharField(blank=True, max_length=200, null=True)),
                ('credit_point', models.IntegerField(blank=True, null=True)),
                ('virtualpoint', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'points_on_sale',
            },
        ),
        migrations.CreateModel(
            name='RefereeAndReferred',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='by', to='booking.Customer')),
            ],
            options={
                'verbose_name_plural': 'referee_and_referred',
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_type', models.CharField(blank=True, max_length=250, null=True)),
                ('total_reward', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('booking', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking_reward', to='booking.BookingTable')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_reward', to='booking.Customer')),
            ],
            options={
                'verbose_name_plural': 'Reward',
            },
        ),
        migrations.CreateModel(
            name='TeamLeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('bonus_credit_point', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'team_leader',
            },
        ),
    ]
